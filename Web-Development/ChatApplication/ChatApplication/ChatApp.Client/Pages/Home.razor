@page "/"
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="container d-flex flex-column align-items-center mt-5">
    <h1 class="text-white bg-dark p-3 rounded">Welcome to the Chat App</h1>
    
    @if (string.IsNullOrEmpty(Nickname))
    {
        <div class="card shadow p-4 mt-4 w-50 text-center bg-dark text-white">
            <input class="form-control mb-3 bg-light text-dark" @bind="nicknameInput" placeholder="Enter nickname..." />
            <button class="btn btn-purple w-100" @onclick="SetNicknameAndRegister">Join</button>
            
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <p class="text-danger mt-3">@ErrorMessage</p>
            }
        </div>
    }
</div>

<style>
    body {
        background-color: #121212;
        color: white;
    }
    .btn-purple {
        background-color: #800080;
        color: white;
        border: none;
    }
    .btn-purple:hover {
        background-color: #9b30ff;
    }
</style>

@code {
    private string Nickname;
    private string ErrorMessage = "";
    private string nicknameInput = "";

    private async Task SetNicknameAndRegister()
    {
        Nickname = nicknameInput;
        await Register();
    }

    private async Task Register()
    {
        if (string.IsNullOrWhiteSpace(Nickname))
        {
            ErrorMessage = "Please enter a valid nickname.";
            return;
        }

        var request = new { Nickname = Nickname };
        
        var response = await Http.PostAsJsonAsync("api/chat/register", request);
        
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo($"/chatroomspage/{Uri.EscapeDataString(Nickname)}", forceLoad: true);
        }
        else
        {
            ErrorMessage = await response.Content.ReadAsStringAsync();
            Nickname = null;
        }
    }
}